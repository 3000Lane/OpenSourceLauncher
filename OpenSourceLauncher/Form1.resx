<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="NotifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="NotifyIcon1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAIABoBAAAJgAAACAgAAAAACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAEAE
        AAAAAAAAAAAAAAAAAAAAAAAA////Af///wH///8B////AazH4wOtx+MHq8fjD6zG4hGsx+IPq8biDazH
        4gusx+MFrsjjA////wH///8B////Af///wH///8B////AazH4werxuITuM/tKbvO7kmPmrl3YWiGlZun
        x3e90PBFrMXiF6zH4wOuyOMD////Af///wH///8BrsnkA6zH4gWrxeEVrb/jUURIZ8VBTGvzboOg9Yea
        qOd4iKPtSE5v6ZilxoOxyeYd////Af///wH///8B////Aa/I4wOsx+MNvdLyPx8lXOtWecL/stP4m7HJ
        50GrxOIzsMjmOdzo7qtFS3L5q7zcbavF4gf///8B////Af///wGsx+MFrcjiGWV7y5MEGLT/aI3uwbLK
        4TWsx+MdrMfjE6zH4x2rwuE5mrLZ6T9EiM281ewf////Af///wH///8BrMfiCbfP4iM5XevFG0Lj/3uT
        4Y+sxuIlrcfiC6zG4wWsx+IPr8fhKazL+MMkNKjzwdXrQ////wH///8B////AavH4gu70OAxQW314xtC
        4/+xxullrMfjHavH4wf///8BrMfjCazH4iOoy/epGDPF/6m63murxuMF////Af///wGsx+MPs8jjRUVx
        +fUGGKb/sMTlXazH4xmtx+MF////AazH4werxuIfx970kVZqzf9/kc6Nq8bjDf///wGsxuMDq8fjF6a5
        3VsiRuf/M1zm+7LG5VOrxuMXrsnkA////wGuyOMHrMfjHaPA7ndEber/donTn6zH4w3///8Bq8fjB6zH
        4iGMp+1/Ejzl/yYxkPG+1OhLrMfjF63H4wP///8BrsjjBazH4xurxelfcZTd/0RRsbmzzeYL////AavH
        4w+wy+UrS2HHsRZC7P8wRrzvvdLlTavH4xmvyeQF////Aa3H4wWsx+MbssfjUWyY9f1EY+HFtMziGf//
        /wGuyOMjv9fnQTVAzddRfer/HiOS87/U6lusx+Mlq8biC6zI4wOsx+ILq8fiJbTJ51krXOH7OT2D38fe
        8Ve0zOgVna7XZ3+Lsblaar373en+/0BIp/+Ilb6fq77eSa3H4xWsxuMFrMbiD6m730VncaK5hpfV/4GN
        svWDk7jZlKPNW63G5SmyyupHyuHzV77U7WvV6vSJiJq/m5eq01utx+IRo8DkA6zH4guftdw3pr3aacDZ
        8E2zyug3uNHtKbDL5hWrx+IFrMfjC6zH4xGsx+MTq8biE6vF4g+sx+ILq8bjB7HK5AOuyOMDrMfiCazH
        4gmsx+MJq8fjBazH4wP///8B////Af///wGqxeMDrcfjA6zI4wWrxuMDq8bjA////wH///8B////Af//
        /wH///8B////Af///wH///8B////AQAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//wAA//8AAP//AAD//wAA//8oAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAA////Af///wH///8B////Af///wH///8B////Af///wH///8BrsnkA////wGtyOMDrMjjB6zH
        4wmsyOMJrMjjC63H4gmsx+MJrcjjCa3I4wmtyOMLrMjjB63I4wWtyOMFrcjkBbbO5wP///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8BrMjjA63I5AOsx+MFrcfjCa3I
        4w+rx+MVq8fjF6zH4xesxuIXrcfjF63H4xWsxuMTq8biE6zH4hGsx+MNrcjjB6zH4wWrxuIDq8biA77T
        6gP///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Aa3I4wOuyOMFrcjjCazH
        4w+sx+MZq8bhIa3G4ie1zeotvdPzOcvh/0PR5v9Pz+P/UcLW9ke90/E5tMvpK6rE4R2rx+MPrMfjB63I
        4wP///8BrsjkA63I4wP///8B////Af///wH///8B////Af///wH///8B////Af///wGvyeMDrMfjB63I
        4wusx+ITq8XiH7XM6C3H3Pw70OX/UbbE6X2XocGhaGyLwT0+W9s3OVzdgYiru52ox6PAz/F/x9z7T63F
        4jGrxeIXrMfjCa3I5AP///8Br8njA////wH///8B////Af///wH///8B////Af///wHA1esDqsbiA63I
        4wWtx+MNq8biE6zF4SHH3fg7v8/3d5GbuatPUHDTGBk2/R4mQf8wPl//NkJb/0xVav9JVHT/GyJD/yAk
        TPOYosmz0+b/cbbN6T+qxOEbrMfjB////wGtx+MD////Af///wH///8B////Af///wH///8BmrvdA7LL
        5gOsyOMFrMfjCazH4xGrxOEhzuP9RZil0qccGkP3AAAT/yYzSv96mL7/sM/x+8rq/9nd+v/X4P3/y83o
        /8PI4PLxf4eZ/wEDKf9UWX/bytr9hbfO6z+qxuEVrcjjA////wH///8B////Af///wH///8B////Af//
        /wGzzOYDrMbiA6zH4wesx+MNqsXiGcvh9j2XpM6tAAAo/wUHOP9okdf/rNr//83o/6u4zu9hsMflRa3F
        40Orw+E9q8PiN7rR71X9//+/xtLa/wgKMv9DRn3l1ej/c6/H5S+sxuIH////Af///wH///8B////Af//
        /wH///8B////AbnQ5wOqxeIFrMfjC6zH4xW4z+cpvM/3ewsQYf8DCUH/cJ78/3yw//+cs+6Pt8rdN6zG
        4TGsx+Itq8biJ6zG4ymsx+MvqMLgLaS83z3r//+1y970/wAAKv+GkLi/yN75VavF4xX///8B////Af//
        /wH///8B////Af///wH///8Br8nkA6zH4wetyOIRrMfjHc7j7zlndsDDAAB//xI60f9Cev//nbXvq8DS
        3T2qxeM1rMjjKazH4x+tyOMZrMfjGa3I4x+tyOMrqMPhL6zB41Hz///rM0iN/wgHS/3G1vOFssvoK6zH
        4wP///8B////Af///wH///8B////Af///wGuyOQDrMjjCazH4xWxy+MjwNXtXSlFv/MABrr/ACPH/0hs
        4fG8zOJpscvkOazH4ymsx+MbrcfjEa7J4w2tx+MNrcfjEazH4x2sx+MtrMHdN8nm/7+NsOb/AABe/4WR
        y7fI3/FBqsbiDf///wH///8B////Af///wH///8BqMXiA63I4wWtx+MNrMfjF7nP4iuovOh9DT7v/wcv
        2v8ABrf/V3Tg183e5letx+MxrMfjH63I4xGsx+IJrMbjBazH4wesyOMLrMfiFazG4yWzyd8vmLTvl7zZ
        //8bK6//QE6029Ll8lmsxuIZ////Af///wH///8B////Af///wGsx+MDrMfiBazH4w2rx+Mbw9fjM4qg
        45sAJ/D/Onj//yxc//9lfuLHytviRavG4iusx+MZrsjjDa/J4wWuyOQDqsbjA6vG4gmtyOIRq8biIbLJ
        4S2jvOZ1rNT//yY+sf8WHo71vs/rd7PM5iP///8B////Af///wH///8B////Ab3S6QOsx+MFq8fjD6zH
        4x/F1uA5fZztvxVJ+v8mWfz/Klf6/6e+8Ju5zt89rMfjJ63I4xesx+MLsMrkA////wH///8BrcjjBa3I
        4w+syOMdrsfhK7zO42OCs//3ACza/wcar/+wvt6Pt8/nM6zH4wf///8B////Af///wH///8BuM7nA6vH
        4getx+MRrcjiJcPU4Edqi+3PIlf//xQ42P8LI77/uMvqgbXN5Dusx+MlrcjjE63I5AmiwOAD////Af//
        /wGqx+MFrcfjDa3I4xmsxuIpscTjW8Tn/+9Zg+v/AAaj/5al16fA1+lDq8bjD////wH///8B////Af//
        /wGtyOMDrsjjB6zH4xOwyuIpuMriVVt/8uEiVf//Bxuk/wgSh/+tv+WFuNHnN6zH4yOtyOMRqcXiB7HK
        5QP///8B////AajF4gWsyOMNrMfjGavF4ieoveJR7P/+46/L7P8AAKH/bYLaw8vg60+rxuMZ////Af//
        /wH///8B////AanF4gOuyOMJrMfjGbHK4S2zxuZnXob+8z9u+P8CFrr/CyC0/a/A5IO3z+Y1rMfjIa3I
        4xGqxuIHv9TpA////wH///8Btc3nA6zH4wusyOMXq8fiJ7HE4EOy0PjPqdP//wANqf9WYqzRzuTyVavG
        4xv///8B////Af///wGxyuUDq8fiA6zH4wusx+Mdts/kMai43HcuU+n/Jk7o/wol0/8WNM//scXsfbbO
        4zOsx+MhrMfjEa7J5AX///8B////Af///wG2z+cDrMfjC6zI4xesyOMltsjfN6HA88GMvv//ACDW/1Bh
        wdnL4OtdrMfjF////wH///8B////AavG4wOrxuMHq8jjEazH4yG+1uU1l6jbjwAU1v81Zfb/a6n//0Jw
        /PGzw+FvssviMazH4x+rxuMPr8nkBf///wH///8B////Ab3T6QOrxuMJrMfjFazH4yW4y98xm7vysXms
        //8LK9X/T2XR3czf52utx+Mb////Af///wH///8BqsfjA6zI4wutyOMXq8fjJ8bZ4TmHouuvCjX1/w41
        3/8SLLP/UmO+38bY6WOuyeQxrMfjH6zH4w+vyeQF////Af///wH///8BuM7oA6zI4wetx+MTrMfjI7bJ
        3y+auu+boNL//yM2pf8cI4rzv9TsebHL5hf///8B////Af///wGsx+MFrMfjDazH4xmtx+IrxdbgRW6Q
        +M0aVP//FzTB/wAAU/88P4TlxtvsZ7DK5zGsx+MdrcjjD67I4wWpxeID////Af///wGvyeQDrcfjB6zH
        4xOsyOMjqsPgLb3R6ond/v//JUzT/wANp/+svdx5t9HoEf///wH///8B////AazI4wesx+MRrMfjH7HL
        5i++zthfNU3F6QM0/f85Y+z/DCSr/0BMpefA0+VnscvmM6zH4x+sx+MPr8nlB////wH///8B////AbrQ
        5wOtx+QHrcfjEavH4yOsxeEvtMfmd8ft//9Cdfv/BTH0/67B5IO2zuIb////Af///wH///8Bq8fjDazH
        4xusx+Mpt9HnN66/3XsHH7n/ACvr/x9H3v8YNsf/Z33d1cvd6WGtx+I5rMfjI6vH4xOvyeQHssvlA///
        /wH///8BqsbiA6zH4wmtyOMVrMfjJa/I4TO0yeRrg7T/9yVO3/8NK8n/tMnqlbXN4z2sxuMJ////Af//
        /wGsx+IVq8fjJavH4jPA1+Y/k6nknwABo/8+Y9z/UnbZ/wAAcP9UW53bzuLxa63H5D+sx+MprsjjGazH
        4g2pxuMFrcnkA63I5AOrx+MFrMjjDa3I4xmsyOMrscrhObPH421Yjf31DTW7/wQCbP+su9+pu9XsX6rF
        4i+rxuMR////Aa7H4yGxyuY1r8nmQ9vu7091ke/DAADR/0qA//9tnPf/AACV/y49q/HD1ut7scvkRazH
        4y+sx+MhrMfjE6zH4wmsyOQFrMjjBavH4gmtyOMRrMfjH6rG4i+1zeFBtsvxezp0//0PP8//AAA+/2Vr
        q9Pj+P95vtTvWbrQ7DOsxeIPr8PjNbC83V21w95zpK/JlwUOjfMfLMf/rMn//8ve/P8KFp//AACe/77Q
        +ZXK3vJXs8voP6zG4iutxuMZrcfkDa3H4weuyOMFrcfjC6zG4xWrxOEpus/rO9bn+lV8hb2tABOs/5+/
        9/9rea7/DxJQ/3mDn9mMmcPPkZ7ImbPI5xmww+dDipvNx3+Mtd1TXoz/ZHWu/9718////////////8vd
        6/8rL3T/Q0uA75qly6WksNR9tMnnP63I5B2tyOMPqsXjBa3H4wOtyOMLq8biFbbM6ieerNeLcXun4yw1
        cP96i7P///////X///Ggt9XpfI+z65Ckzs+OnsyfrsPkHa/I5SWtxudfqcDkb73V9HXa9P+Hy9/zlbvT
        8KvN3/K16v7/zdns8uGAkLLpbH2r9YGQwcO0x+g9sMnkGa3H4g+xy+MDiazoA5685AeyzOIRr8bnIZeq
        142PosbDvdjus9Tv/42yyudrrsTkV8DX80vB2vdFutLsM7jR6iWsxuMVrMbiD67I4xWvyuUbrcjkH6jC
        4CGnwN8jqMDeJaS+3yenv+E3ssvrQ8ff+EHG3/pNt9HwQ6vD4SesxuIVrcfjC6/K4wP///8BpcLjBa7I
        4w+sx+Ibtc7oF7nR7ReyyeYXq8LgG6jD4B+rxeEfqsXiHarF4hmrxuMXq8fjFazH4wmsx+IFrMjjDa3I
        4xGsx+MTq8fjF63H4xusx+MbrMfjHavG4hurxeIZqsXiFavF4RGsx+IPrMfjEavH4wusx+MHq8bjA///
        /wGuyOIDq8biB63I4w2tx+MPrMjjD6zI4w2syOMPrMfjDazI4wurx+MJrMjjB63H4wWuyOQD////Af//
        /wGqxuIDq8bjBa7I4wWsx+MHrcjjC63H4wusx+MNrcfjDa7I4wutyOMLrMfjCa7I4wetyOQHq8bjBazH
        4wO0zOUDtM3mA7vR6AOrxeIDrMfjBazH4gWsx+IFrcfjBazH4wWsx+MDrcfjA////wH///8B////Af//
        /wH///8B////AbPL5QO0zOYDr8nkA6vG4wOqxeMFrMbjBazH4wWuyeQHrMjjBazG4wWqxuMFq8fjBanF
        4gOuyOQDrsnkA////wH///8B////AbjQ6AO50OcDrMfjA6/I5AOsx+QD////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8BscrkA6vG4wOsx+MDqsbjA67J
        5AOuyOQD////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>